#!/usr/bin/env csi -s

(require-library eval)
(import eval)

(define the-global-environment (setup-environment))

(define input-prompt ";;; M-Eval input:")

(define output-prompt ";;; M-Eval value:")

(define (prompt-for-input string)
  (newline) (newline) (display string) (newline))

(define (announce-output string)
  (newline) (display string) (newline))

(define (user-print obj)
  (if (compound-procedure? obj)
      (display (list 'compound-procedure
                     (procedure-parameters obj)
                     (procedure-body obj)
                     '<procedure-env>))
      (display obj)))

(define (driver-loop)
  (prompt-for-input input-prompt)
  (let ((input (read)))
    (let ((output (eval input the-global-environment)))
      (announce-output output-prompt)
      (user-print output)
      (if (not (eq? '*done* output))
          (driver-loop)))))

(driver-loop)
